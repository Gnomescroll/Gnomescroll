============
Jan 24

agent team vox color
rewrite object_vox & team_vox
no team killing
team names
agent names via c
remove python agent list transmission
/nick working
grenade damage on agents
Map saving client side
voxel Skeleton loading & updating

============
Jan 25

Hitscan laser using correct camera state
Team scores
Team spawning in area
increase chat message render time
Agent flag captures affect score
Clean up waf exceptions in client
Remove hk stl include
Change xmax,ymax,zmax macros to XMAX,YMAX,ZMAX
Store `actual` map size, transmit to client(s)
fixed hud formatting
help menu
Team name & scores in hud
Add colored fonts for teams
use offset for block selector
grenades/etc drawing
damage indicator particle billboarded properly
agent name on teammates in view
Place block fail if agent collides (client side)

=============
Jan 26

Deprecate PlayerAgent_status (isnt used, or is used wrong)
Add Agent_state* to PlayerAgent_state
Correct hud weapon texture positions
Merge CtoS firing packet into firing action
Server side place block fail
Move definitions out of headers
Remove unnecessary id property from packets, get id from implicit client_id
billboard text using font glyph alignment, centering, sizing, etc

=============
Jan 27

Billboard text hud projection
Agent name billboard using hud projection
Agents removed from teams on client disconnect
Investigated input normalization

=============

Jan 28-29 (sleep shifted)
Tuned hitscan laser animation to animate offset from player camera vector
move agent collision detections to agent physics
Cleaned up agent control state code
Crouching
Jumping on ground
camera heights
fix agent kill scorekeeping bug
Team name and colors in hud fixed
Right click should only block select when block selector is active
aligned skeleton
update collision detection to handle jumping/jetpack into the ceiling
Started spawners (creation, networking, weapon for placing them)
Align simple voxel models (slime, base etc)

=============

Jan 29-30

Coins:
coins allocation
get coins for flag capture
added to hud $X

improved base and flag spawn boundaries
increased agent speed

Spawners:
cost coins
team maximum
Cant be placed on other spawners
Send list to new clients
Use to determine agent spawn point
Can't be placed where current spawner is
Base acts as defacto spawner.
Health/Destruction
Spawner is reassigned if destroyed since last spawn

List filters on Object_list template
Grenades damage spawners (and turrets when ready)

Add simple gravity to items
merge hitscan object packets

use map dimensions for minimap; raster for heightmap data to get rid of lag spike
Teammates on hud map
Move cube dat client side. not networked

sphere fulstrum culling using radius

fix object_list template index bug (last element overwrite)
add null checks to *list.create where missing
zero control state if dead (agent wont continue walking after death)
Bundle object list transmission into one C method, for new agent connects (cut client compile by >10secs)
remove c_lib_monsters
only use constant server seed during map gen -- use time() for the rest (base/flag/etc spawning)
merge cython files (compile time down to ~7secs both server and client)

=============

Jan 30-31

Add deucbag flag vox
"You're dead" notification
make the flag spin
Fixed colored minivox affecting textured minivox

removed fire_weapon_StoC, replaced with target (object, block, nothing) dependent packets
thus multiplayer gun animations

proper sound failure handling
fix sound positions
better attenuation settings

fix hitscan laser bug when teammates in view
fix team killing /suicides bug

bleed from damage
other agent bleed if think they took damage (got shot)

Chat cursor in C
scoreboard zoom handling

grenades kill slimes
load all projection matrices in camera, once
agent respawn with correct orientation (team based)
fixed minivox coloring
blood spray in random biased direction of incident laser

=============

Feb 1

Melee attack w/ pick
Double buffered map textures
Synchronize PLAYERS_MAX across agent_list, netlib, game/teams (#define PLAYERS_MAX 64 in c_lib/defines.h)
Fix collision detection

reticle in C
cube selector in C
fix cube selector input
inventory in C
hud draw settings in C
hud text in object_list, acts as wrapper
HUD class
formatted text
const hud text in C
fps text in C
ping text in C
player stats indicator in C
=============

Feb 2

misc draw in C (compass, map,)
chat render in C
scoreboard in C
hud equipment icons in C
CyText removed from init_c_lib -- all text creation and draw in C (chat message text still sets some text, but its a setter wrapper only)
Draw/Tick calls managed by client state
=============

Feb 03

Fix client's player block damage animation for hitscan laser; add to pick
Slimes take 2 hits
Networked subvoxel destruction
=============

Feb 04

Fixing up camera
Camera uses proper selected camera_state from player agent
player agent uses agent_camera angles

fix scoreboard failure to reset text

C input framework
InputGlobal state variables in C
simple handlers in C
mouse, quit in C
cube selector in C
agent key down/up events in C
chat text entry buffer in C (chat reads this)
input.py fully deprecated
=============

Feb 05

Camera.py gutted
Identification in C
gut dead python network pieces (identify, dat, a few others)
removed agents.py, game_state.py from server
removed agents.py, game_state.py from client
removed last of camera.py

Finish organizing input.cpp
debug input mode
#ifdef PRODUCTION for different input state defaults
layout of C chat client
=============

Feb 06

python chat removed
C chat implemented

./waf production

fix collision detection
fix place block when crouch (collision detection issue)

Increase mouse sampling
====================

Feb 07

====================

mouse momentum
Team switch UI
Alt-tab while mouse captured not possible?
Ratelimit jetpack / cap height


Weapon tuning
Voxel models

model Animations

Spreadsheet to document interactions
e.g.
Client fires weapon:
play anims/sound client side, (based on expected server filtering. i.e, if server will not apply damage because same team, then dont destroy voxel)
send packet to server,
server responds,
send packet to clients,
clients play anims/sound

OpenAL ? (wav easy, but others hard?)

Icons on map (angus)

Turrets

Minimap

Sounds

System notifications (you killed...)

better base/spawner spawn logic (i.e. if the spawner is buried in a room underground, spawn there, not on top)

Voxel editor:
Bucket fill
Rewrite deserializer
Color pallete
Color wheel --contingent on js lib
http://design.geckotribe.com/colorwheel/    (shows complementary colors)
http://jscolor.com/ (has saturation slider)

Sort out converter pipeline. Fix off by one dimension bug translating from slab6vox ->v3a->json->dcvox

SDL input normalization
--There is no real solution. Might be able to use scancodes to handle most cases. Keymapping feature is only real solution

Figure out the long term server crash
"""
terminate called after throwing an instance of 'St9bad_alloc'
  what():  std::bad_alloc
"""

PYTHON DEPRECATION:
Font
Main loop
settings.py
Parsers
map gen scripts (can be removed easy, not integrated)

-----------
TODO LIST FROM FEB4 NET TEST RESULTS:
 
Other
-fix client side prediction bug (movement is slugish, glitch)   BRANDON
