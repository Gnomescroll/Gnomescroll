============
Jan 24

agent team vox color
rewrite object_vox & team_vox
no team killing
team names
agent names via c
remove python agent list transmission
/nick working
grenade damage on agents
Map saving client side
voxel Skeleton loading & updating

============
Jan 25

Hitscan laser using correct camera state
Team scores
Team spawning in area
increase chat message render time
Agent flag captures affect score
Clean up waf exceptions in client
Remove hk stl include
Change xmax,ymax,zmax macros to XMAX,YMAX,ZMAX
Store `actual` map size, transmit to client(s)
fixed hud formatting
help menu
Team name & scores in hud
Add colored fonts for teams
use offset for block selector
grenades/etc drawing
damage indicator particle billboarded properly
agent name on teammates in view
Place block fail if agent collides (client side)

=============
Jan 26

Deprecate PlayerAgent_status (isnt used, or is used wrong)
Add Agent_state* to PlayerAgent_state
Correct hud weapon texture positions
Merge CtoS firing packet into firing action
Server side place block fail
Move definitions out of headers
Remove unnecessary id property from packets, get id from implicit client_id
billboard text using font glyph alignment, centering, sizing, etc

=============
Jan 27

Billboard text hud projection
Agent name billboard using hud projection
Agents removed from teams on client disconnect
Investigated input normalization

=============

Jan 28-29 (sleep shifted)

Tuned hitscan laser animation to animate offset from player camera vector
move agent collision detections to agent physics
Cleaned up agent control state code
Crouching
Jumping on ground
camera heights
fix agent kill scorekeeping bug
Team name and colors in hud fixed
Right click should only block select when block selector is active
aligned skeleton
update collision detection to handle jumping/jetpack into the ceiling
Started spawners (creation, networking, weapon for placing them)
Align simple voxel models (slime, base etc)

=============

Jan 29-30

Coins:
coins allocation
get coins for flag capture
added to hud $X

improved base and flag spawn boundaries
increased agent speed

Spawners:
cost coins
team maximum
Cant be placed on other spawners
Send list to new clients
Use to determine agent spawn point
Can't be placed where current spawner is
Base acts as defacto spawner.
Health/Destruction
Spawner is reassigned if destroyed since last spawn

List filters on Object_list template
Grenades damage spawners (and turrets when ready)

Add simple gravity to items
merge hitscan object packets

use map dimensions for minimap; raster for heightmap data to get rid of lag spike
Teammates on hud map
Move cube dat client side. not networked

sphere fulstrum culling using radius

fix object_list template index bug (last element overwrite)
add null checks to *list.create where missing
zero control state if dead (agent wont continue walking after death)
Bundle object list transmission into one C method, for new agent connects (cut client compile by >10secs)
remove c_lib_monsters
only use constant server seed during map gen -- use time() for the rest (base/flag/etc spawning)
merge cython files (compile time down to ~7secs both server and client)

=============

Jan 30-31

Add deucbag flag vox
"You're dead" notification
make the flag spin
Fixed colored minivox affecting textured minivox

removed fire_weapon_StoC, replaced with target (object, block, nothing) dependent packets
thus multiplayer gun animations

proper sound failure handling
fix sound positions
better attenuation settings

fix hitscan laser bug when teammates in view
fix team killing /suicides bug

bleed from damage
other agent bleed if think they took damage (got shot)

Chat cursor in C
scoreboard zoom handling

grenades kill slimes
load all projection matrices in camera, once
agent respawn with correct orientation (team based)
fixed minivox coloring
blood spray in random biased direction of incident laser

=============

Feb 1

Melee attack w/ pick
Double buffered map textures
Synchronize PLAYERS_MAX across agent_list, netlib, game/teams (#define PLAYERS_MAX 64 in c_lib/defines.h)
Fix collision detection

reticle in C
cube selector in C
fix cube selector input
inventory in C
hud draw settings in C
hud text in object_list, acts as wrapper
HUD class
formatted text
const hud text in C
fps text in C
ping text in C
player stats indicator in C
=============

Feb 2

misc draw in C (compass, map,)
chat render in C
scoreboard in C
hud equipment icons in C
CyText removed from init_c_lib -- all text creation and draw in C (chat message text still sets some text, but its a setter wrapper only)
Draw/Tick calls managed by client state
=============

Feb 03

Fix client's player block damage animation for hitscan laser; add to pick
Slimes take 2 hits
Networked subvoxel destruction
=============

Feb 04

Fixing up camera
Camera uses proper selected camera_state from player agent
player agent uses agent_camera angles

fix scoreboard failure to reset text

C input framework
InputGlobal state variables in C
simple handlers in C
mouse, quit in C
cube selector in C
agent key down/up events in C
chat text entry buffer in C (chat reads this)
input.py fully deprecated
=============

Feb 05

Camera.py gutted
Identification in C
gut dead python network pieces (identify, dat, a few others)
removed agents.py, game_state.py from server
removed agents.py, game_state.py from client
removed last of camera.py

Finish organizing input.cpp
debug input mode
#ifdef PRODUCTION for different input state defaults
layout of C chat client
=============

Feb 06

python chat removed
C chat implemented

./waf production

fix collision detection
fix place block when crouch (collision detection issue)

Increase mouse sampling
====================

Feb 07

Alt-tab
/team, /name
prevent player_agent_actions when dead
body part damage
played w/ shaders
====================

Feb08

fix valgrind errors on server
lower mouse sensitivity when zoomed
dont destroy teammate voxels
restore voxels on revive
hitscan laser anim vectors against models appear in other clients properly
Ratelimit jetpack / cap height
valgrind server memory leaks
proper object_list deconstruction (wasnt deleteing array members)
add character mode terminal in server for graceful exit in linux shells
fix network packet memory leak
fix valgrind voxel loader uninitialized errors
===================

Feb09

model dimensions
===================

Feb10

improvement to html editor
===================

Feb11

Cleaned up agent model (still needs coloring)
Made skeleton editor
Made crouched and dead alignments
==================

Feb12

added node editing to skeleton editor
remade dead alignment, by rotating skeleton instead of rotating individual parts

removed python networking
moved ping to C
===================

Feb13

Fix map segfault
Sound trigger handlers integrated
===================

Feb 14

install new system
Client main loop in C
Server/client options in C

====================

Feb 15

polish font integration failure
write own font system in C++ (works)
clean up font files
free sdl surfaces
ctrl-c exit works again

====================

Feb 16

wav file reader
openal
fmod/openal build switch

====================

Feb 17

Finish OpenAL integration
Working on linux build

====================

Feb 18

determined package requirement for latest 32bit versions of ubuntu, fedora, opensuse
64bit ubuntu build
osx works with openal

=====================

Feb 19
fix map gen
System notifications (you killed...)
alsa device selection

====================

Feb 20-23
Mom visit

Added mailing list and chat to website

====================

Feb 24

Fixed compiler warnings
Removed gun from voxel model
Realign crouching legs
Fixed byte overflow for spawner packets
Fixed valgrind errors, including --tool=exp-sgcheck

====================

Feb 25

tweak input settings
put builds on website
eternal server script
====================

Feb 26

log remote server
update website
grenade blows up on second bounce
increase grenade-agent damage radius and damage amount
fix alpha blending for "Server Not Connected" message
dont insert ? for SHIFT etc keys
backquote toggles chat display (in addition to chat_input=true)
system message for building/losing spawner
fix 2d sound orientation
select spawners (/spawner command)
added map icons for spawners, base, flags
color map hud icons by team
fix server seeding; seed option only applied during map gen
collision detection on head in lateral motion
====================

Feb 27

version checking in init protocol

update 2d sounds to listener state every tick (so they are actually 3d)
for 2d sounds, update them on the listener every tick (instead of just creation)

tweaked rk4 -- bugged, bad
implemented verlet
refactored particle system
====================

Feb 28

fixed collision detection more (there is still lurking edge case -- dont think i can get it)
release mouse before exit

added mass to particle physics
--particles should be initalized with momentum instead of velocity

control state constants enum'd
jump ground margin decreased
jump sets velocity to 0 before adding in jump burst

client's grenades start play locally instead of waiting for network packet
cleaned some -Wextra warnings
no body rotation while dead
block_action packet, for encoding the event type that caused a block change. variable crumble forces
tweaked momentums for animation particles
die if z level goes below a threshhold -- dont bounce players back up

====================

Feb 29

add --production argument for server python
fix slime test, regenerate periodocially
make slimes faster
clean agent_physics.cpp
migrated all "struct Vector" to Vec3

production_dev build (developers' version of the production build)
bell when players join server on production_dev
reasonable ammo levels for production build

stricter types for packets
fix nasty Agent_state_message bug (id wasnt set)

fix block applier

updated build scripts, pushed build

more scifi default map
fix get_height_at() -- jetpack and hud map restored
camera goes to ground when dead

correct info and reformat help text to fit 800x600 screens
====================

Mar 1

msg id logging to net agent packets
fill color script for models
change agent to army green, add team color
fix bug that occurs when team base color is 0,0,0

apply view distance to particles, models
simple terrain cover for grenade blasts
grenade damage gaussian radius
====================

Mar 2

player name sanitization
fixed possible buffer overruns on some pack_string using packets
convert all statically allocatied Client/ServerState lists & ctf to pointers on the heap
fix segfault in rename system notification
script to clean dcvox conf files
realign agent skeleton to proper alignment

pushed build 6245(7)

update help to mention 'U' key
realign crouched & dead models
redesign hud
-- move status text to top left
-- make weapon text more helpful
normalize agent's speed (was going faster if moving at a diagonal)
adjust blood spray effect
laser aligned with arm
fix grenades damaging teammates (shouldnt)

periodically check agents' names if set to "undefined-agent-name"; request real name if so
-- i've seen this occur live, but its possibly a network bug because all init packets (agent create, identify etc) are reliable
-- either the packet dropped anyway, or the packet was received before the agent create
====================

Mar 3

fix jetpack decay
--test out very short jetpack height (~1.2 off the ground). works well but need testing

much better body destruction
regenerate damaged body at base
notify player disconnected

add Flag::held property -- fixes draw decision issues and teammates "stealing" the flag from each other
fulstrum culling on spawners
integrated frame_graph into input and hud
point compass to flag / base (when you have flag)
====================

Mar 4

create multiple inconsolata font sizes
load multiple fonts from ./media/fonts/fonts_used
swap fonts by size/italic/bold
"You died" and "Server Not Connected" in large print
Don't draw hud text when zoomed

sparks on laser terrain impact

split billboard text particles into axis-aligned and hud-projected classes
hud projected use HudText::Text class now

hudmap uses text icons
spawner system updated
team colors periodically checked in case missed update
smoothed hudmap texture updating

::BRANDON::
compass points to flag, then base
====================

Mar 5

-WORK-

fix slime voxel destruction
dont tick physics on server for viewers
filter actions for viewer time (client and server side)
explicit keyword on single-argument constructors
fix another spawner selection bug
current spawn point highlighted in hud map
increase slime health
change team1 color to green
new heightmap gradient
fix agent hud text color update
view distance check for agent hud text
variable ttls on all particle effect systems
====================

Mar 6

-WORK-

Attempt to draw rotated text
====================

Mar 7

-WORK-

Finish rotated text (single character only)
Highlight player's indicator in addition to selected spawner
Add heightmap cache
====================

Mar 8

-WORK-

Finish map height cache & use in hud map
failed attempt to rotate arm
====================

Mar 9

rate limit base ammo/health restore
"You healed" message
"You have $%d coins. Use them to build spawners (weapon 5)" message, first time receiving coins
Use net agent state for grenade animation
Agent damage sound
adjust coins
-- $1 for 10 slime kills
-- $1 for killing agent
fix font loader segfault
show enemy flag on map
init map surface as 0,0,0,255 (black, nontransparent)
hud text next to compass to say what it is pointing at
map recipes uses tiles by name

--BUILD 6431--

only play damage sound for you
dont draw flag icon if held
chat message validation / filtering
fix billboard hud text timeouts and set_draw properties
draw chat, scoreboard, player hud text when zoomed
quit confirmation dialog
====================

Animations
--Keyframes?
--Splines/interpolated between points
----If can say "here is the standing leg vector, here is the leg stretched furthest when walking" and get the angle, i can do this

Gun model
Gun in first person and zoomed perspectives
agent Skeleton for holding gun, standing and zoomed, gun in place
--gun might be a node off of one of the arms

== UI / FEEDBACK ==
Minimap

== GAMEPLAY ==
Turrets
Weapon firing rate

== VOXEL EDITOR ==
Voxel editor:
Bucket fill
Color pallete
Color wheel --contingent on js lib
http://design.geckotribe.com/colorwheel/    (shows complementary colors)
http://jscolor.com/ (has saturation slider)
Team base color select
Sort out converter pipeline. Fix off by one dimension bug translating from slab6vox ->v3a->json->dcvox

== INPUT ==
SDL input normalization
--There is no real solution. Might be able to use scancodes to handle most cases. Keymapping feature is only real solution

== BRANDON ==
client side prediction bug
endpoints on hitscan laser
Lua
fog

SERVER:
put metaless content back on 100tb (~2-3days of rsyncing)

==PARTICLES==
make better particle class to abstract some drawing
ParticleSystem class for doing much cheaper view distance checks

==================
POLISH TODO:

GRENADES:
charge up
-- for better grenade blast cover simulation, can emit a handful of small particles (like the animation, but more and a little bit higher ttl) and if they collide with an agent then it hits
-- this will get some blasts around corners. still, cap the radial distance for these particles. also possibly decrease damage by particle travel distance
grenade damage indication (blood, voxel destruction)

territory control
    -- color in GLSL

visual feedback for damage received

get hudmap to use z height checks so it can load faster, maybe in the background (slow in the background, fast when open)

private properties of packets, use explicit data filling (but not a constructor, no need to hit the heap)

try 256x256 map

chat command for places of interest

rotate arm slightly inward to point at look location

ammo drops

make non-root user on m643 for angus

show dead body for longer
--requires 2 copies of every agent model

more filtering for viewer teams (slimes probably attack a viewer, for example)

text alignment settings (center,left,right,bottom,top)

color compass arrow, not text

backspace hold down

s# shortcut

PRINT & MAIL REBATES
