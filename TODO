Graphics Engine:

:using index array to reduce bytes per quad from 48 to 8
-decrease map chunk graphics memory usage by 5x
-increased map chunk update speed
-decreased bandwidth between graphics card and memory
-decrease client side memory usage for storing vertex data
-does not require geometry shaders

:fulstrum culling in x/y
-reduce draw calls

Minor:

:draw chunks front to back
-early z-buffer culling
-can transverse in reverse order for transparency effects

:sort and index map chunk vertices by z-level
-allows fulstrum culling in z
-draw range of vertices in VBO buffer, reduces polygons

:sort vertex lists 

Performance Indicator:

:add more colors indcators to hud map loading
-indicate whether map chunk is loaded from network
-indicate whether map chunk is in memory
-indicate whether map chunk is in graphics memory
-indicate whether map chunk was drawn last frame

1> 

<HaltingState> Triplefox, what do you want in terms of game play, or why do you think AoS or minecraft is engaging?
<Triplefox> for me it's the accessibility of the low-res voxel world that makes these games different
<Triplefox> it's easy to create interesting things

Add explosives/tripwires
Add bots/mobs for building

1> multiple player agents 17:09
2> player agent models (visualization of agents) 17:09
3> collision detection on server 17:09
4> steaming map from server to client (working on right now) 17:10
5> creation of projectiles 17:10
6> add/remove blocks in FPS mode by client


Optimization (LATER):
-fulstrum culling for map chunks
-storing pointers to map tile structs, instead of tile_ids
-computation of vertex buffers in C?
-openGL C rendering
