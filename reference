cmmalloc - better than valgrind
tells you where mallocs are occuring and detects things that have not been freed
http://cs.ecs.baylor.edu/~donahoo/tools/ccmalloc/test1.log
http://cs.ecs.baylor.edu/~donahoo/tools/ccmalloc/

eNet Performance issues:
http://www.leadwerks.com/werkspace/blog/50/entry-248-enet-modifications/
preventing clients from crashing server
track memory allocation / malloc

GLSL Tricks:

-use for gamma

(BTW, pow is expensive - since only one of the five ALU slots can run log and exp, raising each color channel to a non-constant power takes eight instruction groups! Ouch.)

"X-Plane's physical shader is based on conditional compilation - that is, for any given state vector of "tricks" we want to use, we recompile the shader with some #defines at the front which turn features on and off. The result is a large number of shaders, none of which need conditional logic in-shader. Fill rate isn't consumed by features we don't use."

http://hacksoflife.blogspot.com/2010/12/fun-with-glsl-compilers.html

OpenGL Profiling:
NVidia's PerfHUD and GLExpert 

Bloom Filter:
http://en.wikipedia.org/wiki/Bloom_(shader_effect)

Motion Blur:
http://http.developer.nvidia.com/GPUGems3/gpugems3_ch27.html
http://gamedev.stackexchange.com/questions/8770/glsl-shader-effects-how-to-do-motion-blur-etc

Handling Mouse Movement:
http://gamedev.stackexchange.com/questions/1083/what-makes-aiming-in-a-console-first-person-shooter-feel-good

AoS Player Stats:
http://www.ace-spades.com/output.txt
http://www.ace-spades.com/stats.txt
http://staging.ace-spades.com
http://staging.ace-spades.com/serverlist.json

Implementing Jumping:
http://oos.moxiecode.com/tut_12/index.html

Splatter Textures:
http://en.wikipedia.org/wiki/Texture_splatting
<JoJoeStinky> might be useful for drawing pathways and roads through yyour terrain,
!!! For pathways and roads

Why Minecraft is Slow:
http://optifog.blogspot.com/
http://www.reddit.com/r/programming/comments/kgq62/understanding_minecraft_performance/

Character Dimensions and Boss Battle:
http://www.youtube.com/watch?v=6lA4ohHhCsw&feature=feedu

!!! OptiFine MT (multithreaded) tries to solve the problem by decoupling the chunk loading from the screen updates so that one complex chunk is distributed over several frames or several empty chunks are loaded inside one frame. The target is to stabilize the frame rate and speed up the loading of empty chunks.

Enabling SSE3 optimizations:
http://gcc.gnu.org/onlinedocs/gcc/i386-and-x86_002d64-Options.html
http://stackoverflow.com/questions/661338/sse-sse2-and-sse3-for-gnu-c
-mtune
-march

Ragdoll:

http://www.gamasutra.com/resource_guide/20030121/jacobson_01.shtml

Ambient Occultion:
!!! http://codeflow.org/entries/2010/dec/09/minecraft-like-rendering-experiments-in-opengl-4/#ambient-occlusion

Fast Inverse Square Root:
http://betterexplained.com/articles/understanding-quakes-fast-inverse-square-root/

float InvSqrt(float x){
   float xhalf = 0.5f * x;
   int i = *(int*)&#038;x; // store floating-point bits in integer
   i = 0x5f3759d5 - (i >> 1); // initial guess for Newton's method
   x = *(float*)&#038;i; // convert new bits into float
   x = x*(1.5f - xhalf*x*x); // One round of Newton's method
   return x;
}

Lambert's cosine law says that the radiant intensity observed from an ideal diffusely reflecting surface (a Lambertian surface) is directly proportional to the cosine of the angle θ between the observer's line of sight and the surface normal.

Terrain Generation:
http://www.reddit.com/r/Minecraft/comments/g0my6/how_terrain_generation_works_in_minecraft/

!!! is down, try later
http://archive.gamedev.net/community/forums/mod/journal/journal.asp?jn=259175&cmonth=11&cyear=2010


Profiling Tool:
Need newer version of ubuntu
http://developer.amd.com/tools/CodeAnalyst/codeanalystlinux/Pages/default.aspx

Catching Memory Leaks:
 The Valgrind memcheck tool is a fantastic way to find all sorts of uninitialized variables and other memory bugs. Valgrind is limited because it is quite slow, it can only find bugs that still exist in the generated machine code (so it can't find things the optimizer removes),

efence - Electric Fence Malloc Debugger
http://linux.die.net/man/3/efence

Noise:

http://mines.lumpylumpy.com/Electronics/Computers/Software/Cpp/Graphics/Bitmap/Textures/Noise/Voronoi.php

Texture Generation:

http://lithosphere.codeflow.org/download.html

Gamma Correction:
http://http.developer.nvidia.com/GPUGems3/gpugems3_ch24.html
http://www.4p8.com/eric.brasseur/gamma.html


Passing GL_SRGB_EXT instead of GL_RGB to glTexImage2D, for example, ensures that any shader accesses to the specified texture return linear pixel values.


Occlusion Queries:

http://http.developer.nvidia.com/GPUGems2/gpugems2_chapter06.html

Some games—for example, shader-heavy ones—use a separate initial rendering pass that writes only to the depth buffer. Subsequent passes test against this depth buffer, and thus expensive shading is done only for visible pixels. If the scenes are complex, our occlusion-culling algorithm can be used to accelerate establishing the initial depth buffer and at the same time to obtain a complete visibility classification of the hierarchy. For the subsequent passes, we skip over objects or whole groups of objects that are completely invisible at virtually no cost.

Minimizing polygon count by software backface culling:
sort polygons into lists based upon z level and faces
"the vertex processor has no information regarding connectivity, hence operations that require topological knowledge can’t be performed in here. For instance it is not possible for a vertex shader to perform back face culling, since it operates on vertices and not on faces. The vertex processor processes vertices individually and has no clue of the remaining vertices."
http://www.lighthouse3d.com/tutorials/glsl-tutorial/vertex-processor/

Array Textures:
http://www.opengl.org/wiki/Array_Texture

!!! Bitmap Fonts:
converts true type to bitmap
http://www.angelcode.com/products/bmfont/
http://ace-spades.com/wp-content/uploads/DDFontMake.exe
http://www.gamedev.net/topic/330742-quick-tutorial-variable-width-bitmap-fonts/

Automatic Mipmapp Generation
http://www.opengl.org/wiki/Common_Mistakes#Automatic_mipmap_generation

glGenerateMipmap(GL_TEXTURE_2D);

glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);
glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA8, width, height, 0, GL_BGRA, GL_UNSIGNED_BYTE, pixels);
glGenerateMipmap(GL_TEXTURE_2D);  //Generate mipmaps now!!!

Charged Miners Shots:
http://miners.walkyrie.se/
http://miners.walkyrie.se/experiments.html

Sound Effects:
http://www.shockwave-sound.com/collections.html
http://www.sounddogs.com/

Design:
http://insertcredit.com/2011/09/22/who-killed-videogames-a-ghost-story/
design: http://www.gdcvault.com/play/1014982/Truth-in-Game
player types: http://www.gamasutra.com/view/feature/6474/personality_and_play_styles_a_.php

GlBlend Techno Particle Effects
http://www.ruudbijnen.nl/blog/2010/09/textures-and-opengl-blending/
