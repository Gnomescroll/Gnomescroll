from libcpp cimport bool

cdef extern from "./voxel/voxel_body.hpp":
    cdef cppclass VoxBody:
        float vox_size
        void init(int n_parts)
        void set_part(
            float rot_x, float rot_y, float rot_z,
            float rot_ax, float rot_ay, float rot_az,
            float anc_len, float anc_x, float anc_y, float anc_z,
            int dim_x, int dim_y, int dim_z,
            int part_num,
            bool biaxial
        )
        void set_color(int part, int x, int y, int z, unsigned char r, unsigned char g, unsigned char b, unsigned char a)

cdef extern from "./monsters/monsters.hpp" namespace "Monsters":
    int SLIME_PART_NUM
    VoxBody slime_vox_dat

    cdef enum SLIME_BODY_PARTS:
        SLIME_PART_BODY

    cdef cppclass Slime:
        int id
        float x,y,z
        float vx,vy,vz

    cdef cppclass Slime_list:
        void tick()
        void update()

    void test(int n)

cdef extern from "./state/client_state.hpp" namespace "ClientState":
    Slime_list slime_list

slime_body=\
{"voxels":[[2,5,0,128,223,31,255],[3,5,0,128,223,31,255],[5,3,0,128,223,31,255],[5,2,0,128,223,31,255],[3,0,0,128,223,31,255],[2,0,0,128,223,31,255],[0,2,0,128,223,31,255],[4,3,0,128,223,31,255],[4,2,0,128,223,31,255],[4,1,0,128,223,31,255],[3,1,0,128,223,31,255],[3,2,0,128,223,31,255],[3,3,0,128,223,31,255],[3,4,0,128,223,31,255],[2,4,0,128,223,31,255],[1,4,0,128,223,31,255],[2,3,0,128,223,31,255],[2,2,0,128,223,31,255],[1,2,0,128,223,31,255],[1,1,0,128,223,31,255],[2,1,0,128,223,31,255],[5,0,2,128,223,31,255],[5,1,2,128,223,31,255],[5,2,1,128,223,31,255],[5,2,2,128,223,31,255],[5,3,1,128,223,31,255],[5,4,1,128,223,31,255],[5,4,2,128,223,31,255],[5,5,2,128,223,31,255],[4,5,1,128,223,31,255],[4,5,2,128,223,31,255],[4,0,1,128,223,31,255],[4,0,2,128,223,31,255],[3,0,2,128,223,31,255],[2,0,1,128,223,31,255],[2,0,2,128,223,31,255],[1,0,1,128,223,31,255],[1,0,2,128,223,31,255],[0,0,2,128,223,31,255],[0,1,2,128,223,31,255],[3,5,2,128,223,31,255],[2,5,1,128,223,31,255],[2,5,2,128,223,31,255],[1,5,1,128,223,31,255],[0,5,2,128,223,31,255],[0,4,1,128,223,31,255],[0,2,1,128,223,31,255],[0,3,1,128,223,31,255],[0,2,2,128,223,31,255],[5,0,3,128,223,31,255],[4,0,3,128,223,31,255],[4,0,4,128,223,31,255],[3,0,4,128,223,31,255],[0,0,3,128,223,31,255],[0,1,4,128,223,31,255],[0,2,4,128,223,31,255],[0,3,3,128,223,31,255],[0,4,3,128,223,31,255],[0,4,4,128,223,31,255],[0,5,3,128,223,31,255],[1,5,3,128,223,31,255],[1,5,4,128,223,31,255],[2,5,4,128,223,31,255],[3,5,4,128,223,31,255],[4,5,3,128,223,31,255],[4,5,4,128,223,31,255],[5,5,3,128,223,31,255],[5,4,4,128,223,31,255],[5,3,4,128,223,31,255],[5,3,3,128,223,31,255],[5,2,3,128,223,31,255],[5,1,4,128,223,31,255],[0,4,2,48,48,48,255],[0,2,3,48,48,48,255],[2,5,3,48,48,48,255],[3,5,1,48,48,48,255],[4,1,1,128,223,31,255],[5,1,1,48,48,48,255],[5,2,4,48,48,48,255],[5,4,3,48,48,48,255],[2,0,3,48,48,48,255],[3,0,1,48,48,48,255],[2,1,5,48,48,48,255],[1,4,5,48,48,48,255],[4,4,0,128,223,31,255],[4,4,1,128,223,31,255],[4,4,2,128,223,31,255],[4,4,3,128,223,31,255],[4,4,4,128,223,31,255],[4,3,1,128,223,31,255],[4,3,2,128,223,31,255],[4,3,3,128,223,31,255],[4,3,4,128,223,31,255],[4,2,1,128,223,31,255],[4,2,2,128,223,31,255],[4,2,3,128,223,31,255],[4,1,2,128,223,31,255],[4,1,3,128,223,31,255],[4,1,4,128,223,31,255],[4,2,4,128,223,31,255],[1,3,0,128,223,31,255],[1,1,1,128,223,31,255],[1,1,2,128,223,31,255],[1,1,3,128,223,31,255],[1,1,4,128,223,31,255],[2,1,1,128,223,31,255],[2,1,2,128,223,31,255],[2,1,3,128,223,31,255],[2,1,4,128,223,31,255],[3,1,1,128,223,31,255],[3,1,2,128,223,31,255],[3,1,3,128,223,31,255],[3,1,4,128,223,31,255],[1,4,1,128,223,31,255],[1,4,2,128,223,31,255],[1,4,3,128,223,31,255],[1,4,4,128,223,31,255],[2,4,1,128,223,31,255],[2,4,2,128,223,31,255],[2,4,3,128,223,31,255],[2,4,4,128,223,31,255],[3,4,1,128,223,31,255],[3,4,2,128,223,31,255],[3,4,3,128,223,31,255],[3,4,4,128,223,31,255],[1,3,1,128,223,31,255],[1,3,2,128,223,31,255],[1,3,3,128,223,31,255],[1,3,4,128,223,31,255],[2,3,1,128,223,31,255],[2,3,2,128,223,31,255],[2,3,3,128,223,31,255],[2,3,4,128,223,31,255],[3,3,1,128,223,31,255],[3,3,2,128,223,31,255],[3,3,3,128,223,31,255],[3,3,4,128,223,31,255],[3,2,1,128,223,31,255],[3,2,2,128,223,31,255],[3,2,3,128,223,31,255],[3,2,4,128,223,31,255],[2,2,1,128,223,31,255],[2,2,2,128,223,31,255],[2,2,3,128,223,31,255],[2,2,4,128,223,31,255],[1,2,1,128,223,31,255],[1,2,2,128,223,31,255],[1,2,3,128,223,31,255],[1,2,4,128,223,31,255],[2,2,5,128,223,31,255],[3,2,5,128,223,31,255],[3,3,5,128,223,31,255],[2,3,5,128,223,31,255],[4,2,5,128,223,31,255],[4,4,5,128,223,31,255],[3,4,5,128,223,31,255],[0,2,5,128,223,31,255],[1,3,5,128,223,31,255],[1,2,5,128,223,31,255],[1,1,5,128,223,31,255],[4,1,5,128,223,31,255]],"vosize":0.2,"dim":[6,6,6]}

#import velociraptor
#slime_body=velociraptor.body

slime_parts = {
    SLIME_PART_BODY: slime_body,
}

def load_slime_voxel_dat():

    slime_vox_dat.init(SLIME_PART_NUM)

    for part in range(SLIME_PART_NUM):
        vox = slime_parts[part]

        slime_vox_dat.vox_size = vox['vosize']

        fx,fy,fz,nx,ny,nz,length,ax,ay,az = [0]*10

        xdim,ydim,zdim = vox['dim']
        biaxial = False
        slime_vox_dat.set_part(fx,fy,fz,nx,ny,nz, length,ax,ay,az, xdim,ydim,zdim, part, biaxial)
        
        for color in vox['voxels']:
            x,y,z, r,g,b,a = color
            slime_vox_dat.set_color(part, x,y,z, r,g,b,a)

def slime_test(int n):
    test(n)

def slime_tick():
#    slime_list.tick()
    slime_list.update()
